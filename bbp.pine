//@version=5
indicator("Bull Bear Power (Quarterly Enhanced)", shorttitle="BBP-Q", overlay=false)
import TradingView/ta/8

// --- קלטים בסיסיים ---
lengthInput = input.int(60, title="Length (EMA 60 Days for Quarterly Trading)")  // EMA 60 ימים
normLength = input.int(60, title="Normalization Length (60 Days for Quarterly Trading)")  // נורמליזציה ל-60 ימים


// --- אפשרויות נוספות למשתמש ---
useATR = input.bool(true, title="Use ATR for Normalization (60 Days)")
showTables = input.bool(false, title="Show Tables")




// --- חישוב BBP ---
bullPower = high - ta.ema(close, lengthInput)
bearPower = low - ta.ema(close, lengthInput)
bbp = bullPower + bearPower

// --- חישוב ATR ל-60 ימים ---
atr = ta.atr(20)
// --- חישוב הערך המקסימלי לנורמליזציה ---
max_abs_bbp = ta.highest(math.abs(bbp), normLength)

// --- נורמליזציה של ה-BBP ל-60 ימים ---
normalized_bbp = useATR ? (atr != 0 ? bbp / atr : 0) : (max_abs_bbp != 0 ? bbp / max_abs_bbp : 0)


// --- יצירת הטבלה ---
var table t = na
if (showTables)
    t := table.new(position.bottom_right, 21, 11, bgcolor=color.rgb(25, 31, 49), frame_color=color.white, frame_width=2)

    // הוספת כותרות לטבלה
    for c = 0 to 3
        table.cell(t, c * 5 + 0, 0, text="Day", text_color=color.white, text_size=size.normal, bgcolor=color.new(color.gray, 90))
        table.cell(t, c * 5 + 1, 0, text="BBP", text_color=color.white, text_size=size.normal, bgcolor=color.new(color.gray, 90))
        table.cell(t, c * 5 + 2, 0, text="Above 0", text_color=color.white, text_size=size.normal, bgcolor=color.new(color.gray, 90))
        table.cell(t, c * 5 + 3, 0, text="Chg From Last bar", text_color=color.white, text_size=size.normal, bgcolor=color.new(color.gray, 90))
        table.cell(t, c * 5 + 4, 0, text="|", text_color=color.white, text_size=size.normal, bgcolor=color.new(color.gray, 90))  // מפריד
// יצירת מערך לאחסון ערכי ה-BBP מהטבלה (מוגבל ל-20 ערכים)
var float[] table_bbp_array = array.new_float()

// פונקציה להוספת ערכים לטבלה
f_addRowToTable(_row, _isAverage) =>
    for col = 0 to 3
        row_offset = col * 5 + _row
        if _isAverage
            table.cell(t, col * 5 + 4, _row + 1, text="", text_color=color.white, text_size=size.tiny, bgcolor=color.new(color.gray, 90))
        else
            // חישוב מספר שורה ואחזור על BBP מנורמל
            number = str.tostring(row_offset + 1)
            bbp_value = normalized_bbp[row_offset]
            bbp_rounded = str.tostring(bbp_value, "#.####")

            // שמירת הערך במערך המייצג את הטבלה והגבלת המערך ל-20 ערכים
            array.push(table_bbp_array, bbp_value)
            if array.size(table_bbp_array) > 20
                array.shift(table_bbp_array)  // הסרת הערך הישן ביותר

            // קביעת סמל וצבע בהתבסס על ערך BBP
            symbol = bbp_value > 0 ? "↑" : bbp_value < 0 ? "↓" : "="
            symbol_color = bbp_value > 0 ? color.green : bbp_value < 0 ? color.red : color.white

            // חישוב השינוי מהיום הקודם
            change = bbp_value - nz(normalized_bbp[row_offset + 1], 0)
            change_symbol = change > 0 ? "+" : change < 0 ? "-" : "="
            change_rounded = str.tostring(change, "#.###")

            // צבע לשינוי: ירוק לעלייה, אדום לירידה
            change_color = change > 0 ? color.green : change < 0 ? color.red : color.white

            // הכנסת ערכים לטבלה בכל אחד מ-4 הריבועים + מפריד
            table.cell(t, col * 5 + 0, _row + 1, text=number, text_color=color.rgb(239, 227, 7), text_size=size.normal, bgcolor=color.new(color.gray, 90))
            table.cell(t, col * 5 + 1, _row + 1, text="" + bbp_rounded, text_color=color.white, text_size=size.normal, bgcolor=color.new(color.gray, 90))
            table.cell(t, col * 5 + 2, _row + 1, text=symbol, text_color=symbol_color, text_size=size.normal, bgcolor=color.new(color.gray, 90))
            table.cell(t, col * 5 + 3, _row + 1, text=change_symbol + " " + change_rounded, text_color=change_color, text_size=size.normal, bgcolor=color.new(color.gray, 90))
            table.cell(t, col * 5 + 4, _row + 1, text="|", text_color=color.white, text_size=size.normal, bgcolor=color.new(color.gray, 90))  // מפריד

            // חישוב ממוצע של ערכי ה-BBP מהמערך
            var float avg_bbp_from_table = 0.0
            if array.size(table_bbp_array) > 0
                float sum_bbp_from_table = 0.0
                for i = 0 to array.size(table_bbp_array) - 1
                    sum_bbp_from_table := sum_bbp_from_table + array.get(table_bbp_array, i)
                avg_bbp_from_table := sum_bbp_from_table / array.size(table_bbp_array)  // ממוצע הערכים

            // הוספת ממוצע לטבלה
            var table avgTable = na
            if na(avgTable)
                avgTable := table.new(position.bottom_left, 4, 2)

            if bar_index >= 20
                date_20th_row = time[19]  // תאריך של הבר ה-20 אחורה
                if not na(date_20th_row)
                    // הצגת התאריך של הבר ה-20 בטבלה
                    table.cell(avgTable, 0, 0, text="20D -" + str.format("{0,date,yyyy-MM-dd}", date_20th_row), text_color=color.white, bgcolor=color.new(color.black, 50))
                    // הצגת ממוצע 20 הערכים האחרונים של ה-BBP מהטבלה
                    table.cell(avgTable, 0, 1, text="Avg BBP: " + str.tostring(avg_bbp_from_table, "#.####"), text_color=color.white, bgcolor=color.new(color.black, 50))


if (showTables)
    for i = 0 to 4
        f_addRowToTable(i, false)  // הוספת הערכים

    f_addRowToTable(5, true)  // הוספת ממוצע לאחר חמישיית ערכים


var table tb = na
if na(tb)
    tb := table.new(position.bottom_left  , 10, 10, bgcolor=color.rgb(0, 0, 0), frame_color=color.rgb(51, 46, 102), frame_width=1, force_overlay=true )


// הכנס את הנתונים לטבלה עם הצבעים שסיפקת ב-barColor
table.cell(tb, 0, 0, text="Strong Green", text_color=color.rgb(0, 255, 81),text_size = size.normal ,text_halign = text.align_center )
table.cell(tb, 1, 0, text="Strong Bull/OverBought ",text_color = color.rgb(225, 222, 222),text_size = size.normal,text_halign = text.align_center )

table.cell(tb, 0, 1, text="Green", text_color=color.rgb(41, 160, 43),text_size = size.normal,text_halign = text.align_center )
table.cell(tb, 1, 1, text="Bull L3 ",text_color = color.rgb(255, 255, 255),text_size = size.normal,text_halign = text.align_center )

table.cell(tb, 0, 2, text="Light Green", text_color=color.rgb(154, 212, 171),text_size = size.normal,text_halign = text.align_center )
table.cell(tb, 1, 2, text="Bull L2",text_color = color.rgb(255, 255, 255),text_size = size.normal,text_halign = text.align_center )

table.cell(tb, 0, 3, text="Dark Green", text_color=color.rgb(154, 212, 171),text_size = size.normal,text_halign = text.align_center )
table.cell(tb, 1, 3, text="Bull L1",text_color = color.rgb(255, 255, 255),text_size = size.normal,text_halign = text.align_center )

table.cell(tb, 0, 4, text="Dark Blue", text_color=color.rgb(80, 153, 255),text_size = size.normal,text_halign = text.align_center )
table.cell(tb, 1, 4, text="Bull takeover zone", text_color = color.rgb(255, 255, 255),text_size = size.normal,text_halign = text.align_center )

table.cell(tb, 0, 5, text="Light Blue", text_color=color.rgb(135, 249, 251),text_size = size.normal,text_halign = text.align_center )
table.cell(tb, 1, 5, text="Bull takeover attempt",text_color = color.rgb(255, 255, 255),text_size = size.normal,text_halign = text.align_center )

table.cell(tb, 4, 5, text="Light Orange", text_color=color.rgb(255, 171, 126),text_size = size.normal,text_halign = text.align_center )
table.cell(tb, 5, 5, text="Bear takeover attempt",text_color = color.rgb(255, 255, 255),text_size = size.normal,text_halign = text.align_center )

table.cell(tb, 4, 4, text="Dark Orange", text_color=color.rgb(252, 105, 0),text_size = size.normal,text_halign = text.align_center )
table.cell(tb, 5, 4, text="Bear takeover zone",text_color = color.rgb(255, 255, 255),text_size = size.normal,text_halign = text.align_center )

table.cell(tb, 4, 3, text="Dark Red", text_color=color.rgb(191, 5, 5),text_size = size.normal,text_halign = text.align_center )
table.cell(tb, 5, 3, text="Bear L1",text_color = color.rgb(255, 255, 255),text_size = size.normal,text_halign = text.align_center )

table.cell(tb, 4, 2, text=" Light Red", text_color=color.rgb(236, 78, 78),text_size = size.normal,text_halign = text.align_center )
table.cell(tb, 5, 2, text="Bear L2",text_color = color.rgb(255, 255, 255),text_size = size.normal,text_halign = text.align_center )

table.cell(tb, 4, 1, text="Red", text_color=color.rgb(227, 19, 19),text_size = size.normal,text_halign = text.align_center )
table.cell(tb, 5, 1, text="Bear L3",text_color = color.rgb(255, 255, 255),text_size = size.normal,text_halign = text.align_center )

table.cell(tb, 4, 0, text="Strong Red", text_color=color.rgb(255, 2, 2),text_size = size.normal,text_halign = text.align_center )
table.cell(tb, 5, 0, text="Strong Bear/OverBought",text_color = color.rgb(255, 255, 255),text_size = size.normal,text_halign = text.align_center )







barColor = normalized_bbp >= 10 ? color.rgb(54, 51, 255) :  
               normalized_bbp >= 8 and normalized_bbp < 10 ? color.rgb(114, 255, 75) :  
               normalized_bbp >= 5 and normalized_bbp < 8 ? color.rgb(42, 211, 0) :  
               normalized_bbp >= 0 and normalized_bbp < 5 ? color.rgb(5, 95, 7) :  
               normalized_bbp >= -5 and normalized_bbp < 0 ? color.rgb(114, 6, 6) : 
               normalized_bbp >= -8 and normalized_bbp < -5 ? color.rgb(255, 118, 118) : 
               normalized_bbp >= -10 and normalized_bbp < -8 ? color.rgb(255, 0, 0) :  

               normalized_bbp < -10 ? color.rgb(247, 0, 255) : na

// barcolor(barColor, offset=0)

// var label[] labels_array = array.new<label>()
// f_manage_labels(_new_label) =>
//     array.push(labels_array, _new_label)
//     if array.size(labels_array) > 20
//         label.delete(array.shift(labels_array))

// if bar_index >= (bar_index - 20)
//     if normalized_bbp >= 7
//         new_label = label.new(bar_index, high, "OverBought 7", color=color.rgb(39, 87, 7, 100), style=label.style_label_down, textcolor=color.rgb(0, 255, 76), force_overlay=true)
//         f_manage_labels(new_label)

//     if normalized_bbp >= 5 and normalized_bbp < 6
//         new_label = label.new(bar_index, high, "5-6", color=color.rgb(39, 87, 7, 100), style=label.style_label_down, textcolor=color.green, force_overlay=true)
//         f_manage_labels(new_label)

//     if normalized_bbp >= 4 and normalized_bbp < 5
//         new_label = label.new(bar_index, high, "4-5", color=color.rgb(39, 87, 7, 100), style=label.style_label_down, textcolor=color.green, force_overlay=true)
//         f_manage_labels(new_label)

//     if normalized_bbp >= 3 and normalized_bbp < 4
//         new_label = label.new(bar_index, high, "3-4", color=color.rgb(39, 87, 7, 100), style=label.style_label_down, textcolor=color.green, force_overlay=true)
//         f_manage_labels(new_label)

//     if normalized_bbp >= 2 and normalized_bbp < 3
//         new_label = label.new(bar_index, high, "2-3", color=color.rgb(39, 87, 7, 100), style=label.style_label_down, textcolor=color.green, force_overlay=true)
//         f_manage_labels(new_label)

//     if normalized_bbp >= 0 and normalized_bbp < 2
//         new_label = label.new(bar_index, high, "0-2", color=color.rgb(39, 87, 7, 100), style=label.style_label_down, textcolor=color.green, force_overlay=true)
//         f_manage_labels(new_label)

//     if normalized_bbp >= -2 and normalized_bbp < 0
//         new_label = label.new(bar_index, high, "2-0", color=color.rgb(85, 24, 24, 100), style=label.style_label_down, textcolor=color.red, force_overlay=true)
//         f_manage_labels(new_label)

//     if normalized_bbp >= -3 and normalized_bbp < -2
//         new_label = label.new(bar_index, high, "3-2", color=color.rgb(85, 24, 24, 100), style=label.style_label_down, textcolor=color.red, force_overlay=true)
//         f_manage_labels(new_label)

//     if normalized_bbp >= -4 and normalized_bbp < -3
//         new_label = label.new(bar_index, high, "4-3", color=color.rgb(85, 24, 24, 100), style=label.style_label_down, textcolor=color.red, force_overlay=true)
//         f_manage_labels(new_label)

//     if normalized_bbp >= -5 and normalized_bbp < -4
//         new_label = label.new(bar_index, high, "5-4", color=color.rgb(85, 24, 24, 100), style=label.style_label_down, textcolor=color.red, force_overlay=true)
//         f_manage_labels(new_label)

//     if normalized_bbp >= -6 and normalized_bbp < -5
//         new_label = label.new(bar_index, high, "6-5", color=color.rgb(85, 24, 24, 100), style=label.style_label_down, textcolor=color.red, force_overlay=true)
//         f_manage_labels(new_label)

//     if normalized_bbp < -7
//         new_label = label.new(bar_index, high, "OverSold -7", color=color.rgb(85, 24, 24, 100), style=label.style_label_down, textcolor=color.red, force_overlay=true)
//         f_manage_labels(new_label)
// צביעת הבר בהתבסס על התנאים
barcolor(barColor, offset=0)

// חישוב ה-RSI
rsiindicator = ta.rsi(close, 20)

// נורמליזציה של ה-RSI לטווח של 20 עד -20
normalized_rsi = (rsiindicator - 50) / 20 * 20

// הצגת ה-RSI המנורמל
plot_rsi = plot(normalized_rsi, title="Normalized RSI", color=color.white, linewidth=2, display=display.none)

// קווים עליונים ותחתונים להתראות ולמילוי
topVal = input.int(25, title="Top Value for Fill")
botVal = input.int(20, title="Bottom Value for Fill")

midle = input.int(0, title="Middle Value for Fill")
botValdown = input.int(-20, title="Bottom Value for Fill")

bbp_value = normalized_bbp

// חישוב ה-MACD, קו האות, וההיסטוגרמה
[macdLine, signalLine, histLine] = ta.macd(close, 12, 26, 9)

// הצגת קו ה-MACD
plot(macdLine, title="MACD Line", color=color.rgb(255, 0, 225), linewidth=2, display=display.none)

// הצגת קו האות
plot(signalLine, title="Signal Line", color=color.rgb(144, 0, 255), linewidth=2, display=display.none)


// ממוצע של כל האינדיקטורים
allindicators_avg = (normalized_rsi + macdLine + signalLine + normalized_bbp) / 4

// חישוב של כל האינדיקטורים במשוקלל
allindicators = 0.20 * normalized_rsi + 0.20 * (macdLine + signalLine + normalized_bbp) / 3 + 0.60 * normalized_bbp



change_color = allindicators >= 10 ? color.rgb(54, 51, 255) :  
               allindicators >= 8 and allindicators < 10 ? color.rgb(114, 255, 75) :  
               allindicators >= 5 and allindicators < 8 ? color.rgb(42, 211, 0) :  
               allindicators >= 0 and allindicators < 5 ? color.rgb(5, 95, 7) :  
               allindicators >= -5 and allindicators < 0 ? color.rgb(114, 6, 6) : 
               allindicators >= -8 and allindicators < -5 ? color.rgb(255, 118, 118) : 
               allindicators >= -10 and allindicators < -8 ? color.rgb(255, 0, 0) : 
               allindicators < -10 ? color.rgb(247, 0, 255) : na
// הצגת ההיסטוגרמה המשוקללת של כל האינדיקטורים
plot(allindicators, title="Weighted BBP", style=plot.style_line, color=change_color, linewidth=2)

// קו התייחסות במרכז

hline(midle, "Middle Limit", color=color.rgb(254, 255, 236), linestyle=hline.style_solid)




